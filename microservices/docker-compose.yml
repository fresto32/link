version: "3"
services:

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"

  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://127.0.0.1:9092,EXTERNAL://127.0.0.1:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "card:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"
    restart: always

    #   card-store:
    #     build: ./card-store/
    #     command: sh -c "npm start"
    #     environment:
    #       - NODE_ENV=development
    #       - PORT=7000
    #     working_dir: "/card-store/"
    #     ports:
    #       - "7000:7000"
    #     volumes:
    #       - ./card-store/:/card-store/:cached # <--- This will map ./card-store/ to /card-store/ inside the container.
    #     logging:
    #       driver: "json-file"
    #       options:
    #         max-size: 10m
    #         max-file: "3"
    #     restart: always

  card-store-db:
    image: mongo
    restart: always
    volumes:
      - ./card-store/data:/data/db
    ports:
      - "27017:27017"
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"

